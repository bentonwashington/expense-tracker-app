{"ast":null,"code":"var _jsxFileName = \"/Users/bentonwashington/Desktop/UdemyCode/React - The Complete Guide/expense-tracker-app/src/components/Expenses/ExpensesChart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpensesChart(props) {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense in props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //starting at - => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n}\n_c = ExpensesChart;\n;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount","Chart","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bentonwashington/Desktop/UdemyCode/React - The Complete Guide/expense-tracker-app/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from 'react';\n\nfunction ExpensesChart(props) {\n    const chartDataPoints = [\n        { label: 'Jan', value: 0},\n        { label: 'Feb', value: 0},\n        { label: 'Mar', value: 0},\n        { label: 'Apr', value: 0},\n        { label: 'Jun', value: 0},\n        { label: 'Jul', value: 0},\n        { label: 'Aug', value: 0},\n        { label: 'Sep', value: 0},\n        { label: 'Oct', value: 0},\n        { label: 'Nov', value: 0},\n        { label: 'Dec', value: 0},\n    ];\n\n    for (const expense in props.expenses) {\n        const expenseMonth = expense.date.getMonth(); //starting at - => January => 0\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints} />\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC1B,MAAMC,eAAe,GAAG,CACpB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,CAC5B;EAED,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAE;IAClC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IAC9CP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;EACzD;EAEA,oBAAOX,OAAA,CAACY,KAAK;IAACC,UAAU,EAAEV;EAAgB;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACjD;AAACC,EAAA,GArBQjB,aAAa;AAqBrB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}